user nginx;
worker_processes 1;

#error_log  /var/log/nginx/error.log;
#error_log /var/log/nginx/error.log  notice;
error_log /var/log/nginx/error.log  info;

pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
    # multi_accept on;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile          on;
    tcp_nopush        on;
    tcp_nodelay       off;
    autoindex         off;
    keepalive_timeout 10;
    server_tokens     off;

    ## detect https
    map $scheme $fastcgi_https {
        default "";
        https on;
    }

    # Uncomment the lines below when using a load balancer (detect https offload header)
    # map $http_x_forwarded_proto $fastcgi_https {
    #    default "";
    #    https on;
    # }

    open_file_cache max=10000 inactive=30m;
    open_file_cache_valid 10m;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    upstream phpfpm {
        server 127.0.0.1:9001;
    }

    gzip on;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_proxied any;
    gzip_min_length  1100;
    gzip_buffers 16 8k;
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    # Some version of IE 6 don't handle compression well on some mime-types, so just disable for them
    gzip_disable "MSIE [1-6].(?!.*SV1)";
    # Set a vary header so downstream proxies don't send cached gzipped content to IE6
    gzip_vary on;

    # Load config files from the /etc/nginx/conf.d directory
    include /etc/nginx/conf.d/*.conf;

    # Increase max post size
    client_max_body_size 64M;

}
